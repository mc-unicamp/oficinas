{"version":3,"file":"auto-arrange-plugin.min.js","sources":["../src/board.js","../src/cache.js","../src/auto-arrange.js","../src/index.js"],"sourcesContent":["export class Board {\n    constructor() {\n        this._cols = [];\n    }\n\n    add(columnIndex, value) {\n        if (!this._cols[columnIndex]) this._cols[columnIndex] = [];\n        \n        this._cols[columnIndex].push(value);\n    }\n\n    toArray() {\n        const normalized = Object.keys(this._cols)\n            .sort((i1, i2) => +i1 - +i2)\n            .map(key => this._cols[key]);\n\n        return normalized;\n    }\n}\n","export class Cache {\n    constructor() {\n        this._map = new WeakMap();\n    }\n\n    track(value) {\n        if (this._map.has(value)) return true;\n        this._map.set(value, true);\n    }\n}\n","import { Board } from './board';\nimport { Cache } from './cache';\n\nexport class AutoArrange {\n    constructor(editor, margin, depth, vertical) {\n        this.editor = editor;\n        this.margin = margin;\n        this.depth = depth;\n        this.vertical = vertical;\n    }\n\n    getNodes(node, type = 'output') {\n        const nodes = [];\n        const key = `${type}s`;\n\n        for (let io of node[key].values())\n            for (let connection of io.connections.values())\n                nodes.push(connection[type === 'input' ? 'output' : 'input'].node);\n            \n        return nodes;\n    }\n\n    getNodesBoard(node, cache = new Cache(), board = new Board(), depth = 0) {\n        if (this.depth && depth > this.depth) return;\n        if (cache.track(node)) return;\n\n        board.add(depth, node);\n        \n        this.getNodes(node, 'output').map(n => this.getNodesBoard(n, cache, board, depth + 1));\n        this.getNodes(node, 'input').map(n => this.getNodesBoard(n, cache, board, depth - 1));\n\n        return board;\n    }\n\n    getNodeSize(node) {\n        const el = this.editor.view.nodes.get(node).el;\n\n        return this.vertical ? {\n            height: el.clientWidth,\n            width: el.clientHeight\n        } : {\n            width: el.clientWidth,\n            height: el.clientHeight\n        }\n    }\n\n    translateNode(node, { x, y }) {\n        const position = this.vertical?[y, x]:[x, y];\n\n        this.editor.view.nodes.get(node).translate(...position);\n        this.editor.view.updateConnections({ node });\n    }\n    \n    arrange(node = this.editor.nodes[0]) {\n        const board = this.getNodesBoard(node).toArray();\n        const margin = this.vertical ? { x: this.margin.y, y: this.margin.x } : this.margin;\n\n        let x = 0;\n\n        for (let column of board) {\n            const sizes = column.map(node => this.getNodeSize(node));\n            const columnWidth  = Math.max(...sizes.map(size => size.width));\n            const fullHeight = sizes.reduce((sum, node) => sum + node.height + margin.y, 0);\n\n            let y = 0;\n\n            for (let node of column) {\n                const position = { x, y: y - fullHeight / 2 };\n                const { height } = this.getNodeSize(node);\n\n                this.translateNode(node, position);\n\n                y += height + margin.y;\n            }\n\n            x += columnWidth + margin.x;\n        }\n    }\n}","import { AutoArrange } from './auto-arrange';\n\nfunction install(editor, { margin = { x: 50, y: 50 }, depth = null, vertical = false }) {\n    editor.bind('arrange');\n\n    const ar = new AutoArrange(editor, margin, depth, vertical);\n    \n    editor.on('arrange', ({ node }) => ar.arrange(node));\n\n    editor.arrange = node => {\n        console.log(`Deprecated: use editor.trigger('arrange', { node }) instead`);\n        ar.arrange(node);\n    }\n}\n\nexport default {\n    name: 'auto-arrange',\n    install\n}"],"names":["Board","_cols","columnIndex","value","this","push","Object","keys","sort","i1","i2","map","key","_this","Cache","_map","WeakMap","has","set","AutoArrange","editor","margin","depth","vertical","node","type","nodes","values","io","connections","connection","cache","board","track","add","getNodes","n","getNodesBoard","el","view","get","height","clientWidth","width","clientHeight","x","y","position","translate","updateConnections","toArray","column","sizes","_this2","getNodeSize","columnWidth","Math","max","size","fullHeight","reduce","sum","translateNode","name","install","bind","ar","on","arrange","console","log"],"mappings":"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"}